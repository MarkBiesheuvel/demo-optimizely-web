const synthetics = require('Synthetics')

const URL = process.env.URL
const TIMEOUT = 5000
const TEXT_SELECTOR = '//*[contains(text(), "Amazing")]'
const BUTTON_SELECTOR = "[id='addtocart']"

const canary = async () => {
  let repetitions = 0

  // Set synthetics configuration
  synthetics.getConfiguration()
    .setConfig({
      screenshotOnStepStart: true,
      screenshotOnStepSuccess: false,
      screenshotOnStepFailure: false
    })

  const page = await synthetics.getPage()

  // Navigate to the initial url
  await synthetics.executeStep('navigateToUrl', async () => {
    await page.goto(URL, {
      waitUntil: ['load', 'networkidle0'],
      timeout: TIMEOUT
    })
  })

  // Execute customer steps
  await synthetics.executeStep('verifyText', async () => {
    await page.waitForXPath(TEXT_SELECTOR, {
      timeout: TIMEOUT
    }).then(() => {
      repetitions = 3
    }).catch(() => {
      repetitions = 2
    })
  })

  await synthetics.executeStep('click', async function () {
    for (let i = 0; i < repetitions; i++) {
      await page.waitForSelector(BUTTON_SELECTOR, { timeout: TIMEOUT })
      await page.click(BUTTON_SELECTOR)
    }
  })
}

exports.handler = async () => {
  return await canary()
}
